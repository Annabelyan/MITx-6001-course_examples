"""The greatest common divisor of two positive integers is the largest integer that divides each of them without remainder
   Write an iterative function, gcdIter(a, b), 
   that implements this idea.
   One easy way to do this is to begin with a test value equal to the smaller of the two input arguments, 
   and iteratively reduce this test value by 1 until you either reach a case where the test divides both a and b without remainder,
   or you reach 1. """
   
   def gcdIter(a, b):
    '''
    a, b: positive integers
    
    returns: a positive integer, the greatest common divisor of a & b.
    '''
    # Your code here
    if a<b:
        test_value = a
    else:
        test_value = b    
    iteration = min(a, b)
    while iteration > 0:
        if max(a,b) % test_value == 0 and min(a,b) % test_value == 0:
            gcd = test_value
        else:
            test_value -= 1
            if max(a,b) % test_value == 0 and min(a,b) % test_value == 0:
                gcd = test_value
      
        iteration -= 1
    return gcd

#Recursion way to get Greatest Commmon Divisor is learnt from Euclide
